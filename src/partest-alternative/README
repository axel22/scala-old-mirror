If you're looking for something to read, I suggest running ../test/partest
with no arguments, which at this moment prints this:

Usage: partest [<options>] [<test> <test> ...]
  <test>: a path to a test designator, typically a .scala file or a directory.
          Examples: files/pos/test1.scala, files/res/bug785

  Test categories:
    --all          run all tests (default, unless no options given)
    --pos          Compile files that are expected to build
    --neg          Compile files that are expected to fail
    --run          Test JVM backend
    --jvm          Test JVM backend
    --res          Run resident compiler scenarii
    --buildmanager Run Build Manager scenarii
    --scalacheck   Run Scalacheck tests
    --script       Run script files
    --shootout     Run shootout tests
    --scalap       Run scalap tests

  Test "smart" categories:
    --grep         run all tests with a source file containing <expr>
    --failed       run all tests which failed on the last run

  Specifying paths and additional flags, ~ means repository root:
    --rootdir      path from ~ to partest (default: test)
    --builddir     path from ~ to test build (default: build/pack)
    --srcdir       path from --rootdir to sources (default: files)
    --javaopts     flags to java on all runs (overrides JAVA_OPTS)
    --scalacopts   flags to scalac on all tests (overrides SCALAC_OPTS)
    --pack         alias for --builddir build/pack
    --quick        alias for --builddir build/quick

  Options influencing output:
    --trace        show the individual steps taken by each test
    --show-diff    show diff between log and check file
    --show-log     show log on failures
    --dry-run      do not run tests, only show their traces.
    --terse        be less verbose (almost silent except for failures)
    --verbose      be more verbose (additive with --trace)
    --debug        maximum debugging output
    --ansi         print output in color

  Other options:
    --timeout      Timeout in seconds
    --cleanup      delete all stale files and dirs before run
    --nocleanup    do not delete any logfiles or object dirs
    --stats        collect and print statistics about the tests
    --validate     examine test filesystem for inconsistencies
    --version      print version
